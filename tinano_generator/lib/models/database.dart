import 'package:analyzer/dart/element/element.dart';
import 'package:tinano_generator/models/operation.dart';

/// A database class. Values will be read from source code.
class DefinedDatabase {
  DatabaseAnnotation annotation;
  ClassElement clazz;
  StaticBuilderMethod staticBuilder;

  OnCreateMethod onCreateMethod;
  List<OnUpgradeMethod> migrationMethods = [];

  String get nameOfImplementationClass => "_\$${clazz.name}Impl";

  List<DefinedOperation> operations = [];
}

/// a `@DatabaseInfo` annotation as it appears on database classes defined.
class DatabaseAnnotation {
  final String path;
  final int schemaVersion;

  final ElementAnnotation element;

  DatabaseAnnotation(this.path, this.schemaVersion, this.element);
}

/// Each database class must define a builder method like this:
/// ```
/// static DatabaseBuilder<MyDatabase> createBuilder() => _$someMethodName();
/// ```
/// The referenced method (_$someMethodName) will be generated by us. We thus
/// need to now the correct name of that method.
class StaticBuilderMethod {
  /// The (user defined) method from the source code.
  final MethodElement method;

  /// The name of the referenced method. In the example above, this would be
  /// _$someMethodName.
  final String nameOfReferencedImplName;

  StaticBuilderMethod(this.method, this.nameOfReferencedImplName);
}

class OnCreateMethod {

  final MethodElement method;
  final ElementAnnotation annotation;

  OnCreateMethod(this.method, this.annotation);
}

class OnUpgradeMethod {

  final MethodElement method;
  final ElementAnnotation annotation;

  final int from;
  final int to;

  OnUpgradeMethod(this.method, this.annotation, this.from, this.to);
}